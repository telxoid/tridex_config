

[gcode_macro DC_VARS]
# Offset coordinates for dual_carriage
variable_offset_x: -0.0
variable_offset_y: -0.0
variable_offset_z: -0.0
# Autopark parameters
## default autopark: 0:inactive - 1:active
variable_autopark: 1
variable_z_hop: 0
variable_movespeed: 200
variable_feedrate: 9000
# HeatBed size
variable_bed_x_min: 0
variable_bed_x_max: 415
# Print cooling fans names
variable_fan0: 'right_part_fan'
variable_fan1: 'left_part_fan'
# Extruders temp
variable_offset_temp: 0
gcode:

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    {% set svv = printer.save_variables.variables %}
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X{svv.th0_park} F{svv.tc_rate}
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
gcode:
    {% set svv = printer.save_variables.variables %}
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    _NOZZLE_SCRUB
    SET_GCODE_OFFSET X=0
    SET_GCODE_OFFSET Y=0
    SET_GCODE_OFFSET Z=0

[gcode_macro PARK_extruder1]
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_GCODE_OFFSET X=0
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X{svv.th1_park} F{svv.tc_rate}
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    {% set svv = printer.save_variables.variables %}
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    _NOZZLE_SCRUB
    SET_GCODE_OFFSET X={svv.offset_x}
    SET_GCODE_OFFSET Y={svv.offset_y}
    SET_GCODE_OFFSET Z={svv.offset_z}

[gcode_macro blah]
gcode:
  SAVE_VARIABLE VARIABLE=blah VALUE='"variable"'

[gcode_macro HEATSOAK]
gcode:
    	{% set T = params.T|default(110)|int %}

        _CG28
        SAVE_GCODE_STATE NAME=HEATSOAK
        G90                                   ; absolute positioning
        SET_DUAL_CARRIAGE CARRIAGE=0
        G0 X200 Y125 Z5 F18000
        SET_DUAL_CARRIAGE CARRIAGE=1                                                      ; turn off exhaust fan
        G0 X50 Y125 Z5 F18000
        SET_DUAL_CARRIAGE CARRIAGE=0
        M140 S{T}
        #PARKBED                                                           ; move to bed to heat probe
        M106 S128                                                         ; set fan to 50%
        SET_IDLE_TIMEOUT TIMEOUT=7200 

[gcode_macro _CG28]
gcode:
   {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in
 printer.toolhead.homed_axes %}
   G28
   {% endif %}

[gcode_macro print_start]
gcode:
   # {% set BED = params.BED|default(105)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(230)|int %}
    #{% set CHAMBER = params.CHAMBER|default(60)|int %}  
    SET_IDLE_TIMEOUT TIMEOUT=3600       ; reset set idle timeout back to 2 hrs
    M117 Heating...
    
    #M141 S{CHAMBER}                     ; set chamber temp
    #M140 S{BED}                         ; set bed final temp
    M104 S140                           ; set hotend to no-ooze temp
    #M190 S{BED}                         ; wait for bed final temp
    M107   
    M117 Homing.                 ; display message
    _CG28
    T0
    PARKBED
    M117 Leveling.   
    M109 S{EXTRUDER}
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    G90
    G0 X24 Y58 Z30 F3600
    G0 E25 F300  
    M117 Printing. 


[gcode_macro print_end]
#   Use PRINT_END for the slicer ending script - PLEASE CUSTOMISE THE SCRIPT FO$
gcode:
    
    G92 E0                         ; zero the extruder
    G91
    G0 E-10.00 F4800                  #retract 6mm of filament
    G0 Z+1.00 X-5 Y-5 F20000  #short quick move to disengage from print
    G0 Z+10.00  F20000              #move Z-Axis 10mm away from part
    #G1 E-4.0 F3600                 ; retract
    G91                            ; relative positioning
    G0 E-19 F4800          #retract additional filament to prevent oozing

    #G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    M104 S0                        ; turn off hotend
    M140 S0                        ; turn off bed
    M106 S0                        ; turn off fan
    G90                            ; absolute positioning
    G0  X125 Y240 F3600            ; park nozzle at rear
    T0
    M117 Finished!                 ; display message
    TURN_OFF_HEATERS

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro _NOZZLE_SCRUB]
gcode:
    
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E2.5 F300
      G1 E-1 F600
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if printer.dual_carriage is defined %}
        G90
        {% if printer.toolhead.extruder == 'extruder' %}
            {% set XPOS0 = printer.configfile.config.stepper_x.position_endstop|float - 0.1 %}
            {% set XPOS1 = printer.configfile.config.stepper_x.position_endstop|float - 35.0 %}
            #G1 X{XPOS1} Y103 F{dcvars.feedrate}
            #G1 X{XPOS1} Y123 F{dcvars.feedrate}

            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS0} Y103 F{dcvars.feedrate}
            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS0} Y103 F{dcvars.feedrate}
            G1 X{XPOS1} Y113 F{dcvars.feedrate}
            G1 X{XPOS0} Y110 F{dcvars.feedrate}
            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS1} Y103 F{dcvars.feedrate}
           
           # G1 X{XPOS1} Y110 F{dcvars.feedrate}
           # G1 X{XPOS} Y110 F{dcvars.feedrate}
            #G1 X{XPOS1} F{dcvars.feedrate}
            #G1 X{XPOS} F{dcvars.feedrate}
            
            
            #G1 X{printer.configfile.config.stepper_x.position_endstop} F{dcvars.feedrate}
        {% elif (printer.toolhead.extruder) == 'extruder1' %}
            {% set XPOS0 = printer.configfile.config.dual_carriage.position_endstop|float + 0.1 %}
            {% set XPOS1 = printer.configfile.config.dual_carriage.position_endstop|float + 35.0 %}

            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS0} Y103 F{dcvars.feedrate}
            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS0} Y103 F{dcvars.feedrate}
            G1 X{XPOS1} Y113 F{dcvars.feedrate}
            G1 X{XPOS0} Y110 F{dcvars.feedrate}
            G1 X{XPOS1} Y123 F{dcvars.feedrate}
            G1 X{XPOS1} Y103 F{dcvars.feedrate}
            
            #G1 X{XPOS1} F{dcvars.feedrate}
            #G1 X{XPOS} F{dcvars.feedrate}
           #G1 X{XPOS1} F{dcvars.feedrate}
            #G1 X{XPOS} F{dcvars.feedrate}
            #G1 X{XPOS1} F{dcvars.feedrate}
            #G1 X{XPOS} F{dcvars.feedrate}
            
            #G1 X{printer.configfile.config.dual_carriage.position_endstop} F{dcvars.feedrate}
        {% else %}
            RESPOND TYPE=error MSG={ "Unknown extruder: %s".format(printer.toolhead.extruder) }
        {% endif %}
    {% endif %}

[gcode_macro M605]
description: Set the dual-carriages mode
gcode:
    {% set mode = params.S|default(1)|int %}
    {% set offset_temp = params.R|default(0)|float %}
    {% if printer.dual_carriage is defined %}
        {% if (mode) == 0 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=0
            MODE_FULL_CONTROL
        {% elif (mode) == 1 %}
            SET_GCODE_VARIABLE MACRO=DC_VARS VARIABLE=autopark VALUE=1
            MODE_FULL_CONTROL
        {% elif (mode) == 2 and (params.X) is defined %}
            MODE_DUPLICATION X={params.X} R={offset_temp}
        {% elif (mode) == 2 %}
            MODE_DUPLICATION R={offset_temp}
        {% elif (mode) == 3 %}
            MODE_MIRRORED R={offset_temp}
        {% endif %}
        G1 F3000
    {% endif %}
    
## DUAL-CARRIAGES : PRINT FANS MANAGEMENT

[gcode_macro M106]
description: Override "M106" to allow multiple extruders.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set raw_speed = params.S|default(0)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %}
    {% if (params.P) is defined %}
        {% set P_fan = dcvars.fan0 if (params.P)|int == 0 else dcvars.fan1 %}
        SET_FAN_SPEED FAN={P_fan} SPEED={fan_speed}
    {% elif printer.dual_carriage is defined %}
        _SET_PRINT_FANS_SPEED SPEED={fan_speed}
    {% endif %}
    
[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:
    M106 S0
    
[gcode_macro _SET_PRINT_FANS_SPEED]
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        # read print fan speed from active extruder
        {% set fan0_speed = printer["fan_generic " + dcvars.fan0].speed|float %}
        {% set fan1_speed = printer["fan_generic " + dcvars.fan1].speed|float %}
        {% set fan_speed = [fan0_speed, fan1_speed]|max %}
    {% endif %}
    {% if printer.dual_carriage.active_carriage == "BOTH" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_0" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% elif printer.dual_carriage.active_carriage == "CARRIAGE_1" %}
        SET_FAN_SPEED FAN={dcvars.fan0} SPEED={fan_speed}
        SET_FAN_SPEED FAN={dcvars.fan1} SPEED={fan_speed}
    {% endif %}

## DUAL-CARRIAGES : HEATERS MANAGEMENT
    
[gcode_macro M104]
rename_existing: M104.1
description: Override "M104" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}
            M104.1 T0 S{temp}
            M104.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M104.1 T{tool} S{temp}
    {% endif %}
    
[gcode_macro M109]
rename_existing: M109.1
description: Override "M109" to allow multiple extruders to be synchronized.
gcode:
    {% set dcvars = printer["gcode_macro DC_VARS"] %}
    {% set temp = params.S|default(0)|float %}
    {% set tool = params.T|default(0)|int %}
    {% if printer.dual_carriage.active_carriage|default() == "BOTH" %}
        {% if tool == 0 %}  
            M104.1 T1 S{temp + dcvars.offset_temp|float}
            M109.1 T0 S{temp}
            M109.1 T1 S{temp + dcvars.offset_temp|float}
        {% endif %}
    {% else %}
        M109.1 T{tool} S{temp}
    {% endif %}

[gcode_macro _SYNC_EXTRUDERS_TEMP]
gcode:
    {% set temp = printer["extruder"].target|float %}
    M109 S{temp}

[gcode_macro PARKBED]
gcode:
        CG28                                  ; Home if not already homed
        SAVE_GCODE_STATE NAME=PARKBED
        G90                                   ; absolute positioning
        G0 X125 Y125 Z5 F18000
        RESTORE_GCODE_STATE NAME=PARKBED
